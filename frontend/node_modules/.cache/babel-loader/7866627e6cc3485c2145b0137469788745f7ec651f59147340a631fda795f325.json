{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\m50053370\\\\projet_git\\\\Smartventory\\\\frontend\\\\src\\\\pages\\\\CategoryPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"../component/Layout\";\nimport ApiService from \"../service/ApiService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryPage = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [categoryName, setCategoryName] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [isEditing, setIsEditing] = useState(false);\n  const [editingCategoryId, setEditingCategoryId] = useState(null);\n\n  //fetcg the categories form our backend\n\n  useEffect(() => {\n    const getCategories = async () => {\n      try {\n        const response = await ApiService.getAllCategory();\n        if (response.status === 200) {\n          setCategories(response.categories);\n        }\n      } catch (error) {\n        var _error$response, _error$response$data;\n        showMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Error Loggin in a User: \" + error);\n      }\n    };\n    getCategories();\n  }, []);\n\n  //add category\n  const addCategory = async () => {\n    if (!categoryName) {\n      showMessage(\"Category name cannot be empty\");\n      return;\n    }\n    try {\n      await ApiService.createCategory({\n        name: categoryName\n      });\n      showMessage(\"Category sucessfully added\");\n      setCategoryName(\"\"); //clear input\n      window.location.reload(); //relode page\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      showMessage(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Error Loggin in a User: \" + error);\n    }\n  };\n\n  //Edit category\n  const editCategory = async () => {\n    try {\n      await ApiService.updateCategory(editingCategoryId, {\n        name: categoryName\n      });\n      showMessage(\"Category sucessfully Updated\");\n      setIsEditing(false);\n      setCategoryName(\"\"); //clear input\n      window.location.reload(); //relode page\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      showMessage(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Error Loggin in a User: \" + error);\n    }\n  };\n\n  //populate the edit category data\n  const handleEditCategory = category => {\n    setIsEditing(true);\n    setEditingCategoryId(category.id);\n    setCategoryName(category.name);\n  };\n\n  //delete category\n  const handleDeleteCategory = async categoryId => {\n    if (window.confirm(\"Are you sure you want to delete this category?\")) {\n      try {\n        await ApiService.deleteCategory(categoryId);\n        showMessage(\"Category sucessfully Deleted\");\n        window.location.reload(); //relode page\n      } catch (error) {\n        var _error$response4, _error$response4$data;\n        showMessage(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || \"Error Deleting in a Category: \" + error);\n      }\n    }\n  };\n\n  //metjhod to show message or errors\n  const showMessage = msg => {\n    setMessage(msg);\n    setTimeout(() => {\n      setMessage(\"\");\n    }, 4000);\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-cat\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: categoryName,\n            type: \"text\",\n            placeholder: \"Category Name\",\n            onChange: e => setCategoryName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), !isEditing ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addCategory,\n            children: \"Add Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: editCategory,\n            children: \"Edit Cateogry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), categories && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"category-list\",\n        children: categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"category-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: category.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditCategory(category),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteCategory(category.id),\n              children: \"Edlete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this)]\n        }, category.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(CategoryPage, \"i8zt6tvzjT/tFpGIz+ASZj646iw=\");\n_c = CategoryPage;\nexport default CategoryPage;\nvar _c;\n$RefreshReg$(_c, \"CategoryPage\");","map":{"version":3,"names":["React","useEffect","useState","Layout","ApiService","jsxDEV","_jsxDEV","CategoryPage","_s","categories","setCategories","categoryName","setCategoryName","message","setMessage","isEditing","setIsEditing","editingCategoryId","setEditingCategoryId","getCategories","response","getAllCategory","status","error","_error$response","_error$response$data","showMessage","data","addCategory","createCategory","name","window","location","reload","_error$response2","_error$response2$data","editCategory","updateCategory","_error$response3","_error$response3$data","handleEditCategory","category","id","handleDeleteCategory","categoryId","confirm","deleteCategory","_error$response4","_error$response4$data","msg","setTimeout","children","className","fileName","_jsxFileName","lineNumber","columnNumber","value","type","placeholder","onChange","e","target","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/m50053370/projet_git/Smartventory/frontend/src/pages/CategoryPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../component/Layout\";\r\nimport ApiService from \"../service/ApiService\";\r\n\r\nconst CategoryPage = () => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [categoryName, setCategoryName] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editingCategoryId, setEditingCategoryId] = useState(null);\r\n\r\n  //fetcg the categories form our backend\r\n\r\n  useEffect(() => {\r\n    const getCategories = async () => {\r\n      try {\r\n        const response = await ApiService.getAllCategory();\r\n        if (response.status === 200) {\r\n          setCategories(response.categories);\r\n        }\r\n      } catch (error) {\r\n        showMessage(\r\n          error.response?.data?.message || \"Error Loggin in a User: \" + error\r\n        );\r\n      }\r\n    };\r\n    getCategories();\r\n  }, []);\r\n\r\n  //add category\r\n  const addCategory = async () => {\r\n    if (!categoryName) {\r\n      showMessage(\"Category name cannot be empty\");\r\n      return;\r\n    }\r\n    try {\r\n      await ApiService.createCategory({ name: categoryName });\r\n      showMessage(\"Category sucessfully added\");\r\n      setCategoryName(\"\"); //clear input\r\n      window.location.reload(); //relode page\r\n    } catch (error) {\r\n      showMessage(\r\n        error.response?.data?.message || \"Error Loggin in a User: \" + error\r\n      );\r\n    }\r\n  };\r\n\r\n  //Edit category\r\n  const editCategory = async () => {\r\n    try {\r\n      await ApiService.updateCategory(editingCategoryId, {\r\n        name: categoryName,\r\n      });\r\n      showMessage(\"Category sucessfully Updated\");\r\n      setIsEditing(false);\r\n      setCategoryName(\"\"); //clear input\r\n      window.location.reload(); //relode page\r\n    } catch (error) {\r\n      showMessage(\r\n        error.response?.data?.message || \"Error Loggin in a User: \" + error\r\n      );\r\n    }\r\n  };\r\n\r\n  //populate the edit category data\r\n  const handleEditCategory = (category) => {\r\n    setIsEditing(true);\r\n    setEditingCategoryId(category.id);\r\n    setCategoryName(category.name);\r\n  };\r\n\r\n  //delete category\r\n  const handleDeleteCategory = async (categoryId) => {\r\n    if (window.confirm(\"Are you sure you want to delete this category?\")) {\r\n      try {\r\n        await ApiService.deleteCategory(categoryId);\r\n        showMessage(\"Category sucessfully Deleted\");\r\n        window.location.reload(); //relode page\r\n      } catch (error) {\r\n        showMessage(\r\n          error.response?.data?.message || \"Error Deleting in a Category: \" + error\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  //metjhod to show message or errors\r\n  const showMessage = (msg) => {\r\n    setMessage(msg);\r\n    setTimeout(() => {\r\n      setMessage(\"\");\r\n    }, 4000);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {message && <div className=\"message\">{message}</div>}\r\n      <div className=\"category-page\">\r\n        <div className=\"category-header\">\r\n          <h1>Categories</h1>\r\n          <div className=\"add-cat\">\r\n            <input\r\n              value={categoryName}\r\n              type=\"text\"\r\n              placeholder=\"Category Name\"\r\n              onChange={(e) => setCategoryName(e.target.value)}\r\n            />\r\n\r\n            {!isEditing ? (\r\n              <button onClick={addCategory}>Add Category</button>\r\n            ) : (\r\n              <button onClick={editCategory}>Edit Cateogry</button>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {categories && (\r\n          <ul className=\"category-list\">\r\n            {categories.map((category) => (\r\n              <li className=\"category-item\" key={category.id}>\r\n                <span>{category.name}</span>\r\n\r\n                <div className=\"category-actions\">\r\n                  <button onClick={() => handleEditCategory(category)}>\r\n                    Edit\r\n                  </button>\r\n                  <button onClick={() => handleDeleteCategory(category.id)}>\r\n                    Edlete\r\n                  </button>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default CategoryPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}