{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\m50053370\\\\projet_git\\\\Smartventory\\\\frontend\\\\src\\\\pages\\\\DashboardPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"../component/Layout\";\nimport ApiService from \"../service/ApiService\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardPage = () => {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1);\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\n  const [selectedData, setSelectedData] = useState(\"amount\");\n  const [transactionData, setTransactionData] = useState([]);\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [totalProducts, setTotalProducts] = useState(0);\n  const [totalSuppliers, setTotalSuppliers] = useState(0);\n  const [counts, setCounts] = useState({});\n  const showMessage = msg => {\n    setMessage(msg);\n    setTimeout(() => setMessage(\"\"), 4000);\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await ApiService.getAllTransactions();\n        if (res.status === 200) {\n          setTransactionData(transformTransactionData(res.transactions, selectedMonth, selectedYear));\n        }\n      } catch (error) {\n        var _error$response, _error$response$data;\n        showMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Error fetching transactions\");\n      }\n    };\n    fetchData();\n  }, [selectedMonth, selectedYear, selectedData]);\n  useEffect(() => {\n    const fetchTotalPrice = async () => {\n      try {\n        const total = await ApiService.sumTotalPriceByTransactionTypeAndStatus(\"sale\", \"completed\");\n        setTotalPrice(total);\n      } catch (error) {\n        var _error$response2, _error$response2$data;\n        showMessage(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Error fetching total price\");\n      }\n    };\n    fetchTotalPrice();\n  }, []);\n  useEffect(() => {\n    const fetchTotalProducts = async () => {\n      try {\n        const count = await ApiService.countProducts();\n        setTotalProducts(count);\n      } catch (error) {\n        var _error$response3, _error$response3$data;\n        showMessage(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Error fetching total products\");\n      }\n    };\n    fetchTotalProducts();\n  }, []);\n  useEffect(() => {\n    const fetchTotalSuppliers = async () => {\n      try {\n        const count = await ApiService.countSuppliers();\n        setTotalSuppliers(count);\n      } catch (error) {\n        var _error$response4, _error$response4$data;\n        showMessage(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || \"Error fetching total suppliers\");\n      }\n    };\n    fetchTotalSuppliers();\n  }, []);\n  useEffect(() => {\n    const fetchTransactionCounts = async () => {\n      try {\n        const response = await ApiService.countAllTransactionTypes();\n        if (response.status === 200) {\n          setCounts(response.data || response);\n        } else {\n          setCounts(response);\n        }\n      } catch (error) {\n        var _error$response5, _error$response5$data;\n        showMessage(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || \"Error fetching transaction counts\");\n      }\n    };\n    fetchTransactionCounts();\n  }, []);\n  useEffect(() => {\n    const fetchCompletedSalesCount = async () => {\n      try {\n        const totalPrice = await ApiService.countCompletedSales();\n        setCounts(prevCounts => ({\n          ...prevCounts,\n          SALE: count\n        }));\n      } catch (error) {\n        var _error$response6, _error$response6$data;\n        showMessage(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || \"Error fetching completed sales count\");\n      }\n    };\n    fetchCompletedSalesCount();\n  }, []);\n  const stats = [{\n    title: \"Total Sales\",\n    value: counts.SALE,\n    icon: \"ðŸ’°\",\n    change: \"+5% this month\"\n  }, {\n    title: \"Total Purchases\",\n    value: counts.PURCHASE,\n    icon: \"ðŸ›’\",\n    change: \"+3% this month\"\n  }, {\n    title: \"Total Transactions\",\n    value: counts.SALE + counts.PURCHASE,\n    icon: \"ðŸ“Š\",\n    change: \"+10% this month\"\n  }, {\n    title: \"Total Products\",\n    value: totalProducts,\n    icon: \"ðŸ“¦\",\n    change: \"+2% this month\"\n  }, {\n    title: \"Total Suppliers\",\n    value: totalSuppliers,\n    icon: \"ðŸ‘¥\",\n    change: \"+1% this month\"\n  }, {\n    title: \"Total Price of Sales\",\n    value: totalPrice,\n    icon: \"ðŸ’µ\",\n    change: \"+4% this month\"\n  }];\n  const transformTransactionData = (transactions, month, year) => {\n    const dailyData = {};\n    const daysInMonth = new Date(year, month, 0).getDate();\n    for (let day = 1; day <= daysInMonth; day++) {\n      dailyData[day] = {\n        day,\n        count: 0,\n        quantity: 0,\n        amount: 0\n      };\n    }\n    transactions.forEach(tx => {\n      const date = new Date(tx.createdAt);\n      if (date.getMonth() + 1 === month && date.getFullYear() === year) {\n        const d = date.getDate();\n        dailyData[d].count += 1;\n        dailyData[d].quantity += tx.totalProducts;\n        dailyData[d].amount += tx.totalPrice;\n      }\n    });\n    return Object.values(dailyData);\n  };\n  const handleMonthChange = e => setSelectedMonth(parseInt(e.target.value, 10));\n  const handleYearChange = e => setSelectedYear(parseInt(e.target.value, 10));\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-grid\",\n          children: stats.map((stat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-icon\",\n                children: stat.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"stat-title\",\n                  children: stat.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"stat-value\",\n                  children: stat.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"stat-change\",\n                  children: stat.change\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 9\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 7\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedData(\"count\"),\n          children: \"Total No Of Transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedData(\"quantity\"),\n          children: \"Product Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedData(\"amount\"),\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"month-select\",\n          children: \"Select Month:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"month-select\",\n          value: selectedMonth,\n          onChange: handleMonthChange,\n          children: Array.from({\n            length: 12\n          }, (_, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: i + 1,\n            children: new Date(0, i).toLocaleString(\"default\", {\n              month: \"long\"\n            })\n          }, i + 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"year-select\",\n          children: \"Select Year:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"year-select\",\n          value: selectedYear,\n          onChange: handleYearChange,\n          children: Array.from({\n            length: 5\n          }, (_, i) => {\n            const year = new Date().getFullYear() - i;\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: year,\n              children: year\n            }, year, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Daily Transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 400,\n          children: transactionData.length > 0 ? /*#__PURE__*/_jsxDEV(LineChart, {\n            data: transactionData,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"day\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: selectedData,\n              stroke: \"#008080\",\n              fillOpacity: 0.3,\n              fill: \"#008080\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No transaction data available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardPage, \"menjwVaCUsAWM5y/oRaDk7F5hqo=\");\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useEffect","useState","Layout","ApiService","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","DashboardPage","_s","message","setMessage","selectedMonth","setSelectedMonth","Date","getMonth","selectedYear","setSelectedYear","getFullYear","selectedData","setSelectedData","transactionData","setTransactionData","totalPrice","setTotalPrice","totalProducts","setTotalProducts","totalSuppliers","setTotalSuppliers","counts","setCounts","showMessage","msg","setTimeout","fetchData","res","getAllTransactions","status","transformTransactionData","transactions","error","_error$response","_error$response$data","response","data","fetchTotalPrice","total","sumTotalPriceByTransactionTypeAndStatus","_error$response2","_error$response2$data","fetchTotalProducts","count","countProducts","_error$response3","_error$response3$data","fetchTotalSuppliers","countSuppliers","_error$response4","_error$response4$data","fetchTransactionCounts","countAllTransactionTypes","_error$response5","_error$response5$data","fetchCompletedSalesCount","countCompletedSales","prevCounts","SALE","_error$response6","_error$response6$data","stats","title","value","icon","change","PURCHASE","month","year","dailyData","daysInMonth","getDate","day","quantity","amount","forEach","tx","date","createdAt","d","Object","values","handleMonthChange","e","parseInt","target","handleYearChange","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","stat","index","onClick","htmlFor","id","onChange","Array","from","length","_","i","toLocaleString","width","height","strokeDasharray","dataKey","type","stroke","fillOpacity","fill","_c","$RefreshReg$"],"sources":["C:/Users/m50053370/projet_git/Smartventory/frontend/src/pages/DashboardPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../component/Layout\";\r\nimport ApiService from \"../service/ApiService\";\r\n\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\n\r\nconst DashboardPage = () => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1);\r\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n  const [selectedData, setSelectedData] = useState(\"amount\");\r\n\r\n  const [transactionData, setTransactionData] = useState([]);\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n  const [totalProducts, setTotalProducts] = useState(0);\r\n  const [totalSuppliers, setTotalSuppliers] = useState(0);\r\n  const [counts, setCounts] = useState({});\r\n\r\n  const showMessage = (msg) => {\r\n    setMessage(msg);\r\n    setTimeout(() => setMessage(\"\"), 4000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await ApiService.getAllTransactions();\r\n        if (res.status === 200) {\r\n          setTransactionData(\r\n            transformTransactionData(res.transactions, selectedMonth, selectedYear)\r\n          );\r\n        }\r\n      } catch (error) {\r\n        showMessage(error.response?.data?.message || \"Error fetching transactions\");\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [selectedMonth, selectedYear, selectedData]);\r\n\r\n  useEffect(() => {\r\n    const fetchTotalPrice = async () => {\r\n      try {\r\n        const total = await ApiService.sumTotalPriceByTransactionTypeAndStatus(\"sale\", \"completed\");\r\n        setTotalPrice(total);\r\n      } catch (error) {\r\n        showMessage(error.response?.data?.message || \"Error fetching total price\");\r\n      }\r\n    };\r\n    fetchTotalPrice();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchTotalProducts = async () => {\r\n      try {\r\n        const count = await ApiService.countProducts();\r\n        setTotalProducts(count);\r\n      } catch (error) {\r\n        showMessage(error.response?.data?.message || \"Error fetching total products\");\r\n      }\r\n    };\r\n    fetchTotalProducts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchTotalSuppliers = async () => {\r\n      try {\r\n        const count = await ApiService.countSuppliers();\r\n        setTotalSuppliers(count);\r\n      } catch (error) {\r\n        showMessage(error.response?.data?.message || \"Error fetching total suppliers\");\r\n      }\r\n    };\r\n    fetchTotalSuppliers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchTransactionCounts = async () => {\r\n      try {\r\n        const response = await ApiService.countAllTransactionTypes();\r\n        if (response.status === 200) {\r\n          setCounts(response.data || response);\r\n        } else {\r\n          setCounts(response);\r\n        }\r\n      } catch (error) {\r\n        showMessage(error.response?.data?.message || \"Error fetching transaction counts\");\r\n      }\r\n    };\r\n    fetchTransactionCounts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchCompletedSalesCount = async () => {\r\n      try {\r\n        const totalPrice = await ApiService.countCompletedSales();\r\n\r\n        setCounts((prevCounts) => ({\r\n          ...prevCounts,\r\n          SALE: count\r\n        }));\r\n      } catch (error) {\r\n        showMessage(error.response?.data?.message || \"Error fetching completed sales count\");\r\n      }\r\n    };\r\n    fetchCompletedSalesCount();\r\n  }, []);\r\n\r\n  const stats = [\r\n    { title: \"Total Sales\", value: counts.SALE, icon: \"ðŸ’°\", change: \"+5% this month\" },\r\n    { title: \"Total Purchases\", value: counts.PURCHASE, icon: \"ðŸ›’\", change: \"+3% this month\" },\r\n    { title: \"Total Transactions\", value: counts.SALE + counts.PURCHASE, icon: \"ðŸ“Š\", change: \"+10% this month\" },\r\n    { title: \"Total Products\", value: totalProducts, icon: \"ðŸ“¦\", change: \"+2% this month\" },\r\n    { title: \"Total Suppliers\", value: totalSuppliers, icon: \"ðŸ‘¥\", change: \"+1% this month\" },\r\n    { title: \"Total Price of Sales\", value: totalPrice, icon: \"ðŸ’µ\", change: \"+4% this month\" }\r\n  ];\r\n\r\n  const transformTransactionData = (transactions, month, year) => {\r\n    const dailyData = {};\r\n    const daysInMonth = new Date(year, month, 0).getDate();\r\n\r\n    for (let day = 1; day <= daysInMonth; day++) {\r\n      dailyData[day] = { day, count: 0, quantity: 0, amount: 0 };\r\n    }\r\n\r\n    transactions.forEach((tx) => {\r\n      const date = new Date(tx.createdAt);\r\n      if (date.getMonth() + 1 === month && date.getFullYear() === year) {\r\n        const d = date.getDate();\r\n        dailyData[d].count += 1;\r\n        dailyData[d].quantity += tx.totalProducts;\r\n        dailyData[d].amount += tx.totalPrice;\r\n      }\r\n    });\r\n\r\n    return Object.values(dailyData);\r\n  };\r\n\r\n  const handleMonthChange = (e) => setSelectedMonth(parseInt(e.target.value, 10));\r\n  const handleYearChange = (e) => setSelectedYear(parseInt(e.target.value, 10));\r\n\r\n  return (\r\n    <Layout>\r\n      {message && <div className=\"message\">{message}</div>}\r\n\r\n      <div className=\"dashboard-page\">\r\n        <div className=\"stats-container\">\r\n  <div className=\"stats-grid\">\r\n    {stats.map((stat, index) => (\r\n      <div key={index} className=\"stat-card\">\r\n        <div className=\"stat-content\">\r\n          <div className=\"stat-icon\">{stat.icon}</div>\r\n          <div className=\"stat-info\">\r\n            <p className=\"stat-title\">{stat.title}</p>\r\n            <p className=\"stat-value\">{stat.value}</p>\r\n            <p className=\"stat-change\">{stat.change}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ))}\r\n  </div>\r\n</div>\r\n\r\n\r\n        <div className=\"button-group\">\r\n          <button onClick={() => setSelectedData(\"count\")}>Total No Of Transactions</button>\r\n          <button onClick={() => setSelectedData(\"quantity\")}>Product Quantity</button>\r\n          <button onClick={() => setSelectedData(\"amount\")}>Amount</button>\r\n        </div>\r\n\r\n        <div className=\"filter-section\">\r\n          <label htmlFor=\"month-select\">Select Month:</label>\r\n          <select id=\"month-select\" value={selectedMonth} onChange={handleMonthChange}>\r\n            {Array.from({ length: 12 }, (_, i) => (\r\n              <option key={i + 1} value={i + 1}>\r\n                {new Date(0, i).toLocaleString(\"default\", { month: \"long\" })}\r\n              </option>\r\n            ))}\r\n          </select>\r\n\r\n          <label htmlFor=\"year-select\">Select Year:</label>\r\n          <select id=\"year-select\" value={selectedYear} onChange={handleYearChange}>\r\n            {Array.from({ length: 5 }, (_, i) => {\r\n              const year = new Date().getFullYear() - i;\r\n              return (\r\n                <option key={year} value={year}>\r\n                  {year}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"chart-section\">\r\n          <h3>Daily Transactions</h3>\r\n          <ResponsiveContainer width=\"100%\" height={400}>\r\n            {transactionData.length > 0 ? (\r\n              <LineChart data={transactionData}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"day\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Line\r\n                  type=\"monotone\"\r\n                  dataKey={selectedData}\r\n                  stroke=\"#008080\"\r\n                  fillOpacity={0.3}\r\n                  fill=\"#008080\"\r\n                />\r\n              </LineChart>\r\n            ) : (\r\n              <p>No transaction data available.</p>\r\n            )}\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,UAAU,MAAM,uBAAuB;AAE9C,SACEC,SAAS,EACTC,IAAI,EACJC,KAAK,EACLC,KAAK,EACLC,aAAa,EACbC,OAAO,EACPC,MAAM,EACNC,mBAAmB,QACd,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElB,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,IAAImB,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EAC7E,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC,IAAImB,IAAI,CAAC,CAAC,CAACI,WAAW,CAAC,CAAC,CAAC;EAC1E,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGzB,QAAQ,CAAC,QAAQ,CAAC;EAE1D,MAAM,CAAC0B,eAAe,EAAEC,kBAAkB,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC4B,UAAU,EAAEC,aAAa,CAAC,GAAG7B,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAAC8B,aAAa,EAAEC,gBAAgB,CAAC,GAAG/B,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACgC,cAAc,EAAEC,iBAAiB,CAAC,GAAGjC,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACkC,MAAM,EAAEC,SAAS,CAAC,GAAGnC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExC,MAAMoC,WAAW,GAAIC,GAAG,IAAK;IAC3BrB,UAAU,CAACqB,GAAG,CAAC;IACfC,UAAU,CAAC,MAAMtB,UAAU,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;EACxC,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACd,MAAMwC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMtC,UAAU,CAACuC,kBAAkB,CAAC,CAAC;QACjD,IAAID,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE;UACtBf,kBAAkB,CAChBgB,wBAAwB,CAACH,GAAG,CAACI,YAAY,EAAE3B,aAAa,EAAEI,YAAY,CACxE,CAAC;QACH;MACF,CAAC,CAAC,OAAOwB,KAAK,EAAE;QAAA,IAAAC,eAAA,EAAAC,oBAAA;QACdX,WAAW,CAAC,EAAAU,eAAA,GAAAD,KAAK,CAACG,QAAQ,cAAAF,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBG,IAAI,cAAAF,oBAAA,uBAApBA,oBAAA,CAAsBhC,OAAO,KAAI,6BAA6B,CAAC;MAC7E;IACF,CAAC;IACDwB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACtB,aAAa,EAAEI,YAAY,EAAEG,YAAY,CAAC,CAAC;EAE/CzB,SAAS,CAAC,MAAM;IACd,MAAMmD,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,KAAK,GAAG,MAAMjD,UAAU,CAACkD,uCAAuC,CAAC,MAAM,EAAE,WAAW,CAAC;QAC3FvB,aAAa,CAACsB,KAAK,CAAC;MACtB,CAAC,CAAC,OAAON,KAAK,EAAE;QAAA,IAAAQ,gBAAA,EAAAC,qBAAA;QACdlB,WAAW,CAAC,EAAAiB,gBAAA,GAAAR,KAAK,CAACG,QAAQ,cAAAK,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBJ,IAAI,cAAAK,qBAAA,uBAApBA,qBAAA,CAAsBvC,OAAO,KAAI,4BAA4B,CAAC;MAC5E;IACF,CAAC;IACDmC,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAENnD,SAAS,CAAC,MAAM;IACd,MAAMwD,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,KAAK,GAAG,MAAMtD,UAAU,CAACuD,aAAa,CAAC,CAAC;QAC9C1B,gBAAgB,CAACyB,KAAK,CAAC;MACzB,CAAC,CAAC,OAAOX,KAAK,EAAE;QAAA,IAAAa,gBAAA,EAAAC,qBAAA;QACdvB,WAAW,CAAC,EAAAsB,gBAAA,GAAAb,KAAK,CAACG,QAAQ,cAAAU,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBT,IAAI,cAAAU,qBAAA,uBAApBA,qBAAA,CAAsB5C,OAAO,KAAI,+BAA+B,CAAC;MAC/E;IACF,CAAC;IACDwC,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAENxD,SAAS,CAAC,MAAM;IACd,MAAM6D,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACF,MAAMJ,KAAK,GAAG,MAAMtD,UAAU,CAAC2D,cAAc,CAAC,CAAC;QAC/C5B,iBAAiB,CAACuB,KAAK,CAAC;MAC1B,CAAC,CAAC,OAAOX,KAAK,EAAE;QAAA,IAAAiB,gBAAA,EAAAC,qBAAA;QACd3B,WAAW,CAAC,EAAA0B,gBAAA,GAAAjB,KAAK,CAACG,QAAQ,cAAAc,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBb,IAAI,cAAAc,qBAAA,uBAApBA,qBAAA,CAAsBhD,OAAO,KAAI,gCAAgC,CAAC;MAChF;IACF,CAAC;IACD6C,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN7D,SAAS,CAAC,MAAM;IACd,MAAMiE,sBAAsB,GAAG,MAAAA,CAAA,KAAY;MACzC,IAAI;QACF,MAAMhB,QAAQ,GAAG,MAAM9C,UAAU,CAAC+D,wBAAwB,CAAC,CAAC;QAC5D,IAAIjB,QAAQ,CAACN,MAAM,KAAK,GAAG,EAAE;UAC3BP,SAAS,CAACa,QAAQ,CAACC,IAAI,IAAID,QAAQ,CAAC;QACtC,CAAC,MAAM;UACLb,SAAS,CAACa,QAAQ,CAAC;QACrB;MACF,CAAC,CAAC,OAAOH,KAAK,EAAE;QAAA,IAAAqB,gBAAA,EAAAC,qBAAA;QACd/B,WAAW,CAAC,EAAA8B,gBAAA,GAAArB,KAAK,CAACG,QAAQ,cAAAkB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBjB,IAAI,cAAAkB,qBAAA,uBAApBA,qBAAA,CAAsBpD,OAAO,KAAI,mCAAmC,CAAC;MACnF;IACF,CAAC;IACDiD,sBAAsB,CAAC,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAENjE,SAAS,CAAC,MAAM;IACd,MAAMqE,wBAAwB,GAAG,MAAAA,CAAA,KAAY;MAC3C,IAAI;QACF,MAAMxC,UAAU,GAAG,MAAM1B,UAAU,CAACmE,mBAAmB,CAAC,CAAC;QAEzDlC,SAAS,CAAEmC,UAAU,KAAM;UACzB,GAAGA,UAAU;UACbC,IAAI,EAAEf;QACR,CAAC,CAAC,CAAC;MACL,CAAC,CAAC,OAAOX,KAAK,EAAE;QAAA,IAAA2B,gBAAA,EAAAC,qBAAA;QACdrC,WAAW,CAAC,EAAAoC,gBAAA,GAAA3B,KAAK,CAACG,QAAQ,cAAAwB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBvB,IAAI,cAAAwB,qBAAA,uBAApBA,qBAAA,CAAsB1D,OAAO,KAAI,sCAAsC,CAAC;MACtF;IACF,CAAC;IACDqD,wBAAwB,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,KAAK,GAAG,CACZ;IAAEC,KAAK,EAAE,aAAa;IAAEC,KAAK,EAAE1C,MAAM,CAACqC,IAAI;IAAEM,IAAI,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAiB,CAAC,EAClF;IAAEH,KAAK,EAAE,iBAAiB;IAAEC,KAAK,EAAE1C,MAAM,CAAC6C,QAAQ;IAAEF,IAAI,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAiB,CAAC,EAC1F;IAAEH,KAAK,EAAE,oBAAoB;IAAEC,KAAK,EAAE1C,MAAM,CAACqC,IAAI,GAAGrC,MAAM,CAAC6C,QAAQ;IAAEF,IAAI,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAkB,CAAC,EAC5G;IAAEH,KAAK,EAAE,gBAAgB;IAAEC,KAAK,EAAE9C,aAAa;IAAE+C,IAAI,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAiB,CAAC,EACvF;IAAEH,KAAK,EAAE,iBAAiB;IAAEC,KAAK,EAAE5C,cAAc;IAAE6C,IAAI,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAiB,CAAC,EACzF;IAAEH,KAAK,EAAE,sBAAsB;IAAEC,KAAK,EAAEhD,UAAU;IAAEiD,IAAI,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAiB,CAAC,CAC3F;EAED,MAAMnC,wBAAwB,GAAGA,CAACC,YAAY,EAAEoC,KAAK,EAAEC,IAAI,KAAK;IAC9D,MAAMC,SAAS,GAAG,CAAC,CAAC;IACpB,MAAMC,WAAW,GAAG,IAAIhE,IAAI,CAAC8D,IAAI,EAAED,KAAK,EAAE,CAAC,CAAC,CAACI,OAAO,CAAC,CAAC;IAEtD,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,IAAIF,WAAW,EAAEE,GAAG,EAAE,EAAE;MAC3CH,SAAS,CAACG,GAAG,CAAC,GAAG;QAAEA,GAAG;QAAE7B,KAAK,EAAE,CAAC;QAAE8B,QAAQ,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAE,CAAC;IAC5D;IAEA3C,YAAY,CAAC4C,OAAO,CAAEC,EAAE,IAAK;MAC3B,MAAMC,IAAI,GAAG,IAAIvE,IAAI,CAACsE,EAAE,CAACE,SAAS,CAAC;MACnC,IAAID,IAAI,CAACtE,QAAQ,CAAC,CAAC,GAAG,CAAC,KAAK4D,KAAK,IAAIU,IAAI,CAACnE,WAAW,CAAC,CAAC,KAAK0D,IAAI,EAAE;QAChE,MAAMW,CAAC,GAAGF,IAAI,CAACN,OAAO,CAAC,CAAC;QACxBF,SAAS,CAACU,CAAC,CAAC,CAACpC,KAAK,IAAI,CAAC;QACvB0B,SAAS,CAACU,CAAC,CAAC,CAACN,QAAQ,IAAIG,EAAE,CAAC3D,aAAa;QACzCoD,SAAS,CAACU,CAAC,CAAC,CAACL,MAAM,IAAIE,EAAE,CAAC7D,UAAU;MACtC;IACF,CAAC,CAAC;IAEF,OAAOiE,MAAM,CAACC,MAAM,CAACZ,SAAS,CAAC;EACjC,CAAC;EAED,MAAMa,iBAAiB,GAAIC,CAAC,IAAK9E,gBAAgB,CAAC+E,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACtB,KAAK,EAAE,EAAE,CAAC,CAAC;EAC/E,MAAMuB,gBAAgB,GAAIH,CAAC,IAAK1E,eAAe,CAAC2E,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACtB,KAAK,EAAE,EAAE,CAAC,CAAC;EAE7E,oBACEhE,OAAA,CAACX,MAAM;IAAAmG,QAAA,GACJrF,OAAO,iBAAIH,OAAA;MAAKyF,SAAS,EAAC,SAAS;MAAAD,QAAA,EAAErF;IAAO;MAAAuF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAEpD7F,OAAA;MAAKyF,SAAS,EAAC,gBAAgB;MAAAD,QAAA,gBAC7BxF,OAAA;QAAKyF,SAAS,EAAC,iBAAiB;QAAAD,QAAA,eACtCxF,OAAA;UAAKyF,SAAS,EAAC,YAAY;UAAAD,QAAA,EACxB1B,KAAK,CAACgC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBhG,OAAA;YAAiByF,SAAS,EAAC,WAAW;YAAAD,QAAA,eACpCxF,OAAA;cAAKyF,SAAS,EAAC,cAAc;cAAAD,QAAA,gBAC3BxF,OAAA;gBAAKyF,SAAS,EAAC,WAAW;gBAAAD,QAAA,EAAEO,IAAI,CAAC9B;cAAI;gBAAAyB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAC5C7F,OAAA;gBAAKyF,SAAS,EAAC,WAAW;gBAAAD,QAAA,gBACxBxF,OAAA;kBAAGyF,SAAS,EAAC,YAAY;kBAAAD,QAAA,EAAEO,IAAI,CAAChC;gBAAK;kBAAA2B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eAC1C7F,OAAA;kBAAGyF,SAAS,EAAC,YAAY;kBAAAD,QAAA,EAAEO,IAAI,CAAC/B;gBAAK;kBAAA0B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eAC1C7F,OAAA;kBAAGyF,SAAS,EAAC,aAAa;kBAAAD,QAAA,EAAEO,IAAI,CAAC7B;gBAAM;kBAAAwB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC,GAREG,KAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OASV,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGE7F,OAAA;QAAKyF,SAAS,EAAC,cAAc;QAAAD,QAAA,gBAC3BxF,OAAA;UAAQiG,OAAO,EAAEA,CAAA,KAAMpF,eAAe,CAAC,OAAO,CAAE;UAAA2E,QAAA,EAAC;QAAwB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAClF7F,OAAA;UAAQiG,OAAO,EAAEA,CAAA,KAAMpF,eAAe,CAAC,UAAU,CAAE;UAAA2E,QAAA,EAAC;QAAgB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC7E7F,OAAA;UAAQiG,OAAO,EAAEA,CAAA,KAAMpF,eAAe,CAAC,QAAQ,CAAE;UAAA2E,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC,eAEN7F,OAAA;QAAKyF,SAAS,EAAC,gBAAgB;QAAAD,QAAA,gBAC7BxF,OAAA;UAAOkG,OAAO,EAAC,cAAc;UAAAV,QAAA,EAAC;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnD7F,OAAA;UAAQmG,EAAE,EAAC,cAAc;UAACnC,KAAK,EAAE3D,aAAc;UAAC+F,QAAQ,EAAEjB,iBAAkB;UAAAK,QAAA,EACzEa,KAAK,CAACC,IAAI,CAAC;YAAEC,MAAM,EAAE;UAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,kBAC/BzG,OAAA;YAAoBgE,KAAK,EAAEyC,CAAC,GAAG,CAAE;YAAAjB,QAAA,EAC9B,IAAIjF,IAAI,CAAC,CAAC,EAAEkG,CAAC,CAAC,CAACC,cAAc,CAAC,SAAS,EAAE;cAAEtC,KAAK,EAAE;YAAO,CAAC;UAAC,GADjDqC,CAAC,GAAG,CAAC;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC,eAET7F,OAAA;UAAOkG,OAAO,EAAC,aAAa;UAAAV,QAAA,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACjD7F,OAAA;UAAQmG,EAAE,EAAC,aAAa;UAACnC,KAAK,EAAEvD,YAAa;UAAC2F,QAAQ,EAAEb,gBAAiB;UAAAC,QAAA,EACtEa,KAAK,CAACC,IAAI,CAAC;YAAEC,MAAM,EAAE;UAAE,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAK;YACnC,MAAMpC,IAAI,GAAG,IAAI9D,IAAI,CAAC,CAAC,CAACI,WAAW,CAAC,CAAC,GAAG8F,CAAC;YACzC,oBACEzG,OAAA;cAAmBgE,KAAK,EAAEK,IAAK;cAAAmB,QAAA,EAC5BnB;YAAI,GADMA,IAAI;cAAAqB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAET,CAAC;UAEb,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAEN7F,OAAA;QAAKyF,SAAS,EAAC,eAAe;QAAAD,QAAA,gBAC5BxF,OAAA;UAAAwF,QAAA,EAAI;QAAkB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3B7F,OAAA,CAACF,mBAAmB;UAAC6G,KAAK,EAAC,MAAM;UAACC,MAAM,EAAE,GAAI;UAAApB,QAAA,EAC3C1E,eAAe,CAACyF,MAAM,GAAG,CAAC,gBACzBvG,OAAA,CAACT,SAAS;YAAC8C,IAAI,EAAEvB,eAAgB;YAAA0E,QAAA,gBAC/BxF,OAAA,CAACL,aAAa;cAACkH,eAAe,EAAC;YAAK;cAAAnB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACvC7F,OAAA,CAACP,KAAK;cAACqH,OAAO,EAAC;YAAK;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACvB7F,OAAA,CAACN,KAAK;cAAAgG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACT7F,OAAA,CAACJ,OAAO;cAAA8F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACX7F,OAAA,CAACH,MAAM;cAAA6F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACV7F,OAAA,CAACR,IAAI;cACHuH,IAAI,EAAC,UAAU;cACfD,OAAO,EAAElG,YAAa;cACtBoG,MAAM,EAAC,SAAS;cAChBC,WAAW,EAAE,GAAI;cACjBC,IAAI,EAAC;YAAS;cAAAxB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACf,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO,CAAC,gBAEZ7F,OAAA;YAAAwF,QAAA,EAAG;UAA8B;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QACrC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACkB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb,CAAC;AAAC3F,EAAA,CApNID,aAAa;AAAAkH,EAAA,GAAblH,aAAa;AAsNnB,eAAeA,aAAa;AAAC,IAAAkH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}